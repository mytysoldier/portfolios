import 'package:flutter/material.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:frontend/apis/api_service.dart';
import 'package:frontend/models/record.dart';
import 'package:intl/intl.dart';

class RecordListScreen extends StatefulWidget {
  const RecordListScreen({
    super.key,
    required this.onRecordTapped,
  });

  final VoidCallback onRecordTapped;

  @override
  State<StatefulWidget> createState() => _RecordListScreenState();
}

class _RecordListScreenState extends State<RecordListScreen> {
  late Future<List<Record>> records;

  @override
  void initState() {
    super.initState();
    records = fetchRecords();
  }

  @override
  Widget build(BuildContext context) {
    final l10n = L10n.of(context);

    return Column(
      children: [
        Container(
          width: double.infinity,
          height: 40,
          color: Colors.brown,
          alignment: Alignment.center,
          child: Text(
            l10n.recordListScreenTitle,
            style: const TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.bold,
              color: Colors.white,
            ),
          ),
        ),
        Expanded(
          child: FutureBuilder(
              future: records,
              builder: (context, snapshot) {
                if (snapshot.connectionState == ConnectionState.waiting) {
                  return const Center(
                    child: CircularProgressIndicator(),
                  );
                } else if (snapshot.hasError) {
                  return Center(
                    child: Text('Error: ${snapshot.error}'),
                  );
                } else {
                  return ListView.builder(
                    itemCount: snapshot.data!.length,
                    itemBuilder: (context, index) {
                      final record = snapshot.data![index];
                      String formattedDate = DateFormat('yyyy/MM/dd HH:mm')
                          .format(record.createdAt);
                      return Container(
                        decoration: const BoxDecoration(
                          border: Border(
                            top: BorderSide(
                              width: 0.5,
                            ),
                          ),
                        ),
                        child: GestureDetector(
                          onTap: () {
                            widget.onRecordTapped();
                          },
                          child: ListTile(
                            dense: true,
                            title: Row(
                              children: [
                                Text(formattedDate),
                                const Icon(Icons.arrow_right),
                              ],
                            ),
                          ),
                        ),
                      );
                    },
                  );
                }
              }),
        ),
        // TODO
        // Flexible(
        //   child: ListView.builder(
        //     itemCount: 3,
        //     itemBuilder: (BuildContext context, index) {
        //       return Text(
        //         'data',
        //       );
        //     },
        //   ),
        // ),
      ],
    );
  }
}
